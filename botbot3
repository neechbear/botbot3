#!/home/nicolaw/webroot/perl-5.8.7/bin/perl -w

use 5.8.4;
use strict;
use warnings;
use subs qw(debug);

use FindBin qw($Bin);
use lib ('./','./lib/',"$Bin","$Bin/plugin");

use constant DEBUG => $ENV{DEBUG} ? 1 : 0;

use POE;
use POE::Component::Client::TCP;
use POE::Filter::Line;
use File::Basename qw(fileparse);
use Config::General qw();
use Data::Dumper;
use Parse::Colloquy::Bot qw(:all);
use Daemon;
use plugin;

use Module::Pluggable(
		search_dirs => [ "$Bin/plugin" ],
		search_path => [ "plugin" ],
		instantiate => 'new',
	);

use vars qw($VERSION $SELF);
($SELF = $0) =~ s|^.*/||;
$VERSION = sprintf('%d.%02d', q$Revision$ =~ /(\d+)/g);

sleep(4) if @ARGV && grep(/^(-p|--pause)$/i,@ARGV);
init_server() if @ARGV && grep(/^(-d|--daemon)$/i,@ARGV);
chdir($Bin) || die "Unable to change directory to $Bin: $!";

my ($basename, $dirname, $extension) = fileparse($0, '\.[^\.]+');
my %config = read_config("$dirname$basename.cfg");

POE::Component::Client::TCP->new(
		RemoteAddress => $config{host},
		RemotePort    => $config{port},
		Filter => [ "POE::Filter::Line", Literal => "\x0D\x0A" ],

		Connected => sub {
			print "Connected to $config{host}:$config{port}\n";
			$_[HEAP]->{banner_buffer} = [];
			$_[KERNEL]->delay(send_enter => 5);
		},

		ConnectError => sub {
			print "Could not connect to $config{host}:$config{port}\n";
		},

		ServerInput => sub {
			my ($kernel, $heap, $input) = @_[KERNEL, HEAP, ARG0];
			my $args = parse_line($input);
			DEBUG && warn("\n".Dumper($args)."\n");
			$heap->{server}->put("$config{username} $config{password}\n") if $args->{msgtype} eq 'HELLO';
			$heap->{server}->put(".observe public\n") if $args->{msgtype} eq 'COMMENT';
			$kernel->delay(send_enter => undef);
		},

		InlineStates =>  {
			send_enter => sub {
				debug "Sending enter to $config{host}:$config{port}\n";
				$_[HEAP]->{server}->put("\n");
				$_[KERNEL]->delay(input_timeout => 5);
			},

			input_timeout => sub {
				my ($kernel, $heap) = @_[KERNEL, HEAP];
				$kernel->yield("shutdown");
			},
		}
	);

$poe_kernel->run();

exit 0;

sub read_config {
	my $conf = new Config::General(
			-ConfigFile => shift,
			map { ( "-$_", 1 ) } qw(UseApacheInclude IncludeRelative
				LowerCaseNames MergeDuplicateBlocks AllowMultiOptions
				MergeDuplicateOptions AutoTrue)
		);
	return $conf->getall;
}

sub debug {
	return unless DEBUG;
	warn $_ for @_;
}

1;

