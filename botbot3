#!/home/nicolaw/webroot/perl-5.8.7/bin/perl -w

use 5.8.4;
use strict;
use warnings;

use FindBin qw($Bin);
use lib ('./','./lib/',"$Bin","$Bin/plugin");

use POE;
use POE::Component::Client::TCP;
use POE::Filter::Line;
use File::Basename qw(fileparse);
use Config::General qw();
use Time::HiRes;
use Parse::Colloquy::Bot qw(:all);
use Daemon;
use plugin;

BEGIN {
	if ($ENV{DEBUG}) {
		require Log::Trace;
		import Log::Trace 'warn' => { Deep => 1 };
	}
}

use Module::Pluggable(
		search_dirs => [ "$Bin/plugin" ],
		search_path => [ "plugin" ],
		instantiate => 'new',
	);

use vars qw($VERSION $SELF);
($SELF = $0) =~ s|^.*/||;
$VERSION = '3.01' || sprintf('%d', q$Revision$ =~ /(\d+)/g);

sleep(4) if @ARGV && grep(/^(-p|--pause)$/i,@ARGV);
init_server() if @ARGV && grep(/^(-d|--daemon)$/i,@ARGV);
chdir($Bin) || die "Unable to change directory to $Bin: $!";

my ($basename, $dirname, $extension) = fileparse($0, '\.[^\.]+');
my $config = read_config("$dirname$basename.cfg");

POE::Component::Client::TCP->new(
		RemoteAddress => $config->{host},
		RemotePort    => $config->{port},
		Filter => [ "POE::Filter::Line", Literal => "\x0D\x0A" ],

		Connected => sub {
			TRACE("Connected");
			print "Connected to $config->{host}:$config->{port}\n";
			$_[HEAP]->{logged_in} = 0;
			$_[KERNEL]->delay(send_enter => 5);
		},

		ConnectError => sub {
			TRACE("ConnectError");
			print "Could not connect to $config->{host}:$config->{port}\n";
		},

		ServerInput => sub {
			TRACE("ServerInput");
			my ($kernel, $heap, $input) = @_[KERNEL, HEAP, ARG0];

			my $time = Time::HiRes::time();
			my $args = parse_line($input);
			$args->{time} = $time;

			# here init tims

			$heap->{server}->put("$config->{username} $config->{password}\n") if $args->{msgtype} eq 'HELLO';
			$heap->{server}->put(".observe public\n") if $args->{msgtype} eq 'COMMENT';

			$kernel->delay(send_enter => undef) if $args->{msgtype} eq 'HELLO';
			$kernel->delay(login_timeout => undef) if grep(/^DONE|COMMENT$/,($args->{msgtype}));
		},

		InlineStates =>  {
			send_enter => sub {
				TRACE("InlineStates => send_enter");
				$_[HEAP]->{server}->put("\n");
				$_[KERNEL]->delay(login_timeout => 5);
			},

			login_timeout => sub {
				TRACE("InlineStates => login_timeout");
				my ($kernel, $heap) = @_[KERNEL, HEAP];
				$kernel->yield("shutdown");
			},
		}
	);

$poe_kernel->run();

exit 0;

sub read_config {
	my $conf = new Config::General(
			-ConfigFile => shift,
			map { ( "-$_", 1 ) } qw(UseApacheInclude IncludeRelative
				LowerCaseNames MergeDuplicateBlocks AllowMultiOptions
				MergeDuplicateOptions AutoTrue)
		);
	return {$conf->getall};
}

1;

